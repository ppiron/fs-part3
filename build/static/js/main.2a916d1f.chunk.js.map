{"version":3,"sources":["services/persons.js","components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filter","onFilterChange","value","onChange","PersonForm","onSubmit","onNameChange","onNumberChange","newName","newNumber","type","Persons","persons","onDelete","map","person","name","toLowerCase","includes","key","number","onClick","event","Notification","message","className","ErrorNotification","errorMessage","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setErrorMessage","useEffect","personService","initialPersons","target","preventDefault","matchedPerson","length","returnedPerson","concat","window","setTimeout","catch","error","console","log","alert","confirm","updatedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a916d1f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'https://x9csh.sse.codesandbox.io/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  del: del,\r\n  update: update\r\n}","import React, { useState, useEffect } from 'react'\r\n// import axios from 'axios'\r\nimport personService from '../services/persons'\r\n\r\nconst Filter = ({ filter, onFilterChange }) => {\r\n  return (\r\n    <div>filter shown with <input value={filter} onChange={onFilterChange} /> </div>\r\n  )\r\n}\r\n\r\nconst PersonForm = ({ onSubmit, onNameChange, onNumberChange, newName, newNumber }) => {\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input value={newName} onChange={onNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={onNumberChange} /></div>\r\n      <div>\r\n        <button type=\"submit\" >add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst Persons = ({ persons, filter, onDelete }) => {\r\n  return (\r\n    persons.map(person => (\r\n      person.name.toLowerCase().includes(filter) ? <p key={person.name}>{person.name} {person.number} <button onClick={event => onDelete(person.id, person.name)}>delete</button></p> : null\r\n    ))\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === '') {\r\n    return null\r\n  } else {\r\n    return (\r\n      <div className={`notification`}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ErrorNotification = ({ errorMessage }) => {\r\n  if (errorMessage === '') {\r\n    return null\r\n  } else {\r\n    return (\r\n      <div className={`notification error`}>\r\n        {errorMessage}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const filterBook = event => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const onNameChange = event => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const onNumberChange = event => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    if (newName === '') {\r\n      alert(`error: missing name`)\r\n      return\r\n    }\r\n    if (newNumber === '') {\r\n      alert(`error: missing number`)\r\n      return\r\n    }\r\n    const matchedPerson = persons.filter(person => person.name === newName)\r\n    if (matchedPerson.length === 0) {\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      personService\r\n        .create(newPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMessage(`${returnedPerson.name} added to the phonebook`)\r\n          window.setTimeout(() => setMessage(``), 2500)\r\n        })\r\n        .catch(error => console.log(error))\r\n    } else if (matchedPerson[0].number === newNumber) {\r\n      alert(`${newName} is already added to the phonebook`)\r\n    } else {\r\n      const confirm = window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)\r\n      if (confirm) {\r\n        const updatedPerson = {\r\n          name: newName,\r\n          number: newNumber\r\n        }\r\n        personService.update(matchedPerson[0].id, updatedPerson).then(returnedPerson => {\r\n          setPersons(persons.map(\r\n            person => person.id === matchedPerson[0].id ? returnedPerson : person\r\n          ))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setMessage(`Number of ${returnedPerson.name} changed`)\r\n          window.setTimeout(() => setMessage(``), 2500)\r\n        })\r\n          .catch(error => {\r\n            setErrorMessage(`Information of ${matchedPerson[0].name} has already been removed from the server`)\r\n            // window.setTimeout(() => setErrorMessage(``), 2500)\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  const onDelete = (id, name) => {\r\n    const confirm = window.confirm(`Delete ${name}?`)\r\n    if (confirm) {\r\n      personService.del(id).then(() => personService.getAll().then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter filter={filter} onFilterChange={filterBook} />\r\n      <h2>add a new</h2>\r\n      <PersonForm newName={newName} newNumber={newNumber} onSubmit={handleSubmit} onNameChange={onNameChange} onNumberChange={onNumberChange} />\r\n      <Notification message={message} />\r\n      <ErrorNotification errorMessage={errorMessage} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filter={filter} onDelete={onDelete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport './index.css'\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}